import { ReplyError } from "./../ReplyError";
import { Db, DbQueue, State } from "./queue.db";
import * as discord from "discord.js";
import * as assert from "assert";

export function generateMessage(
    publisher: string,
    remaining: {
        id: string;
        tag: string;
    }[] = null,
    current: {
        id: string;
        tag: string;
    } = null
) {
    let builder: string[] = [];
    builder.push(
        "üü¢ C'est parti ! J'ouvre la file d'attente pour ceux qui veulent obtenir le dodocode partag√© par " +
            publisher +
            "."
    );
    if (current && current.tag) {
        builder.push(`${current.tag} est entrain de passer.`);
    }

    if (remaining && remaining.length) {
        builder.push("Les prochaines personnes √† passer sont :");
        remaining.forEach((element) => {
            builder.push(`- ${element.tag}`);
        });
        builder.push("Pr√©parez-vous !");
    }
    builder.push("");
    builder.push("Pour faire la queue, r√©agissez sur ce message, avec n'importe quel emote.");
    // builder.push("");
    // builder.push("Si vos messages priv√©s sont ferm√©s, envoyez m'en un avec n'importe quoi");
    // "Pour faire la queue, r√©agissez sur ce message, avec n'importe quel emote. Il n'est n√©cessaire de r√©agir qu'une seule fois. Toute suppression d'une r√©action sur ce message, entrainera votre d√©scintription de la liste ; sans que regard soit port√© aux autres √©ventuelles r√©actions en votre nom qui seraient toujours pr√©sentes.";

    return builder.join("\n");
}
